name: Build MAUI-Mac

on:
  push:
    branches: [ main, dev/add-ci ]
    paths:
      - '.github/workflows/dev-mac.yml' 
      - 'src/**'

  pull_request:
    branches: [ main ]

  workflow_dispatch:

env:
    APPCENTER_APPNAME_MAC: k-strathdee/maui-cicd-mac
    APPCENTER_APPNAME_ANDROID: k-strathdee/maui-cicd
    APPCENTER_APPNAME_IOS: k-strathdee/maui-cicd-ios
    APPCENTER_GROUP: Collaborators
    APP_NAME: maui-cicd
    DOTNETVERSION:  6.0.100
    DOTNETROOT: /usr/local/share/dotnet/
    DOTNETTOOLS: ~/.dotnet/tools

jobs:
  buildmac:
    runs-on: macos-11
    
    steps:
      - uses: actions/checkout@v2

      - name: Create Artifacts Folder
        shell: pwsh
        run: mkdir $GITHUB_WORKSPACE\artifacts

      - name: Setup .NET Core SDK 5.x
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '5.x'

      - name:  install .NET 6 preview
        shell: bash
        run: |
          export PATH="${{env.DOTNETROOT}}:${{env.DOTNETTOOLS}}:$PATH" &&
          curl -L https://raw.githubusercontent.com/dotnet/install-scripts/7a9d5dcab92cf131fc2d8977052f8c2c2d540e22/src/dotnet-install.sh > dotnet-install.sh &&
          sh dotnet-install.sh --version ${{env.DOTNETVERSION}} --install-dir ${{env.DOTNETROOT}} --verbose &&
          dotnet --list-sdks &&
          echo "$PATH"
          
      - name: Install and Run maui-check Tool
        shell: bash
        run: |
          dotnet tool update --global redth.net.maui.check &&
          maui-check --ci --non-interactive --fix --skip androidsdk --skip xcode --skip vswin --skip vsmac --skip edgewebview2
      
      - name: Run Unit Tests
        shell: bash
        run: |
          dotnet test --logger trx --results-directory "TestResults-${{github.run_number}}"
      
      - name: Upload dotnet test results
        uses: actions/upload-artifact@v2
        with:
          name: dotnet-results-${{ github.run_number }}
          path: TestResults-${{ github.run_number }}

      - name: Authenticate with App Center
        shell: bash
        run: |
          appcenter login --token ${{secrets.APP_CENTER_TOKEN}}
      
      - name: Build android
        shell: bash
        run: |
          dotnet build src -f net6.0-android -c Release

      - name: Upload android to App Center
        shell: bash
        run: |
          appcenter distribute release -f src/bin/Release/**/*-Signed.apk \
                                       -g ${{env.APPCENTER_GROUP}} \
                                       --app ${{env.APPCENTER_APPNAME_ANDROID}}
      
      # TODO: sign macOS app - use dotnet publish? research pkg vs dmg
      - name: Build macOS
        shell: bash
        run: |
          dotnet build src -f net6.0-maccatalyst -c Release

      - name: package macOS
        shell: bash
        run: |
          hdiutil create \
                    -fs HFS+ \
                    -srcfolder "src/bin/Release/net6.0-maccatalyst/maccatalyst-x64/maui-cicd.app" \
                    -volname "${{env.APP_NAME}}" "${{env.APP_NAME}}"
      
      # TODO: notarize macOS app
      # - name: Notarize app
      #   run: |
      #     npx notarize-cli --file "build/$PRODUCT_MODULE_NAME.dmg"
      #   env:
      #     NOTARIZE_USERNAME: ${{ secrets.NOTARIZE_USERNAME }}
      #     NOTARIZE_PASSWORD: ${{ secrets.NOTARIZE_PASSWORD }}

      - name: upload macOS to App Center
        shell: bash
        run: |
          appcenter distribute release \
                                  -f ${{env.APP_NAME}}.dmg \
                                  -g ${{env.APPCENTER_GROUP}} \
                                  --app ${{env.APPCENTER_APPNAME_MAC}} \
                                  --build-version 1 \
                                  --build-number ${{github.run_number}} 
        
      - name: Build iOS
        shell: bash
        run: |
          dotnet build src -f net6.0-ios